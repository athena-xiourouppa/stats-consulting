---
title: "Mixed Effects Model"
author: "Athena Xiourouppa"
format: pdf
  smart: false
---

The following document details the development of a predictive mixed-effects model for 
gene expression data.

# Load packages and data
We load the necessary packages for working with data frames, generating mixed effects
models, labeling graphs, and colouring graphs. We also read in the melted tibble from our previous
data cleaning.
```{r}
pacman::p_load(tidyverse, lme4, ggrepel, paletteer, vip, kableExtra, performance)
genes <- read.csv(here::here("data", "melted-gene-WTF-IISfD-data.csv"))
head(genes)
```

# Fit random effects models
We have four main variables to consider as predictors for gene expression: gene line, cell type, treatment, all of which are categorical, and concentration of activating factor, which is numeric.

The gene line can be considered as a random effect, since there is slight variation between each 
experiment, but without multiple trials per gene line, we cannot use effectively interpret it as a predictor. 

We will test various models that use different interactions between the remaining three variables.

Figure @fig-eda shows the data from each gene line separated by cell type and treatment type. We see significant differences in the intercepts between the two subplots, indicating that we should consider all three remaining variables as predictors:

```{r}
#| label: fig-eda
#| fig-cap: Plots showing the increase in gene expression as concentration of activating factor increases. We see that the Wild Type cells have a lower starting intercept value. We have also labelled the gene line for each set of eleven points.

genes |> 
  ggplot(aes(x=conc, y=gene_expression, color=treatment,
             label=ifelse(conc==10, as.character(gene_line),''))) +
  geom_point() +
  geom_label_repel(nudge_x = 2,
                 direction = "y",
                 show.legend = FALSE) +
  facet_wrap(~ cell_type, scales="free",
             labeller = labeller(cell_type = cell_type.labs)) +
  labs(x = "Concentration (mg/mL)",
       y = "Gene Expression",
       color = "Treatment",
       label = "Gene Line") +
  theme(legend.position="bottom") +
  paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
                                     labels=c("Activating Factor 42", "Placebo"))
ggsave(here::here("figs/2023-05-08-mixed-effects/model-eda.pdf"))
```

## Model 1: No Interaction
Our first model uses gene line as a random intercept effect, with three predictors of 
concentration, treatment, and cell type.
```{r}
m1 <- lmer(gene_expression ~ 
             conc + treatment + cell_type + (1 | gene_line),
           data = genes)
summary(m1)
```

Figure @fig-m1 shows the assumption checking for the model.
```{r}
#| fig-cap: The residuals vs fitted plot for the first model. We see that there is curvature about the zero-line, indicating poor homoscedasticity. 
#| label: fig-m1
plot(m1)
```

## Model 2: Concentration x Treatment
Our second model creates interaction between concentration of treatment and treatment type, 
but is otherwise identical to the first model.
```{r}
m2 <- lmer(gene_expression ~ 
             conc * treatment + cell_type + (1 | gene_line),
           data = genes)
summary(m2)
```

Figure @fig-m2 shows the assumption checking for the model.
```{r}
#| fig-cap: The residuals vs fitted plot for the second model. We see that there is random scattering, so the model satisfies the homoscedasticity assumption.
#| label: fig-m2
pdf(here::here("figs", "2023-05-08-mixed-effects/model2-assumptions.pdf"))
plot(m2)
dev.off()
```

## Model 3: Treatment x Cell Type
Our third model creates interaction between treatment and cell type, 
but is otherwise identical to the first model.
```{r}
m3 <- lmer(gene_expression ~ 
             conc + treatment * cell_type + (1 | gene_line),
           data = genes)
summary(m3)
```

Figure @fig-m3 shows the assumption checking for the model.
```{r}
#| fig-cap: The residuals vs fitted plot for the third model. We see that there is strong curvature, so the model does not satisfy the homoscedasticity assumption. 
#| label: fig-m3
plot(m3)
```

## Model 4: Concentration x Cell Type
Our fourth model creates interaction between concentration of treatment and cell type, 
but is otherwise identical to the first model.
```{r}
m4 <- lmer(gene_expression ~ 
             treatment + conc * cell_type + (1 | gene_line),
           data = genes)
summary(m4)
```

Figure @fig-m4 shows the assumption checking for the model.
```{r}
#| fig-cap: The residuals vs fitted plot for the fourth model. We see that there is strong curvature, so the model does not satisfy the homoscedasticity assumption. 
#| label: fig-m4
plot(m4)
```

## Model 5: Concentration x Treatment x Cell Type
Our final model creates interaction between concentration of treatment, treatment type, and cell type, keeping gene line as a random effect.
```{r}
m5 <- lmer(gene_expression ~ 
            conc * treatment * cell_type + (1 | gene_line),
           data = genes)
summary(m5)
```

Figure @fig-m5 shows the assumption checking for the model.
```{r}
#| fig-cap: The residuals vs fitted plot for the final model. We see that there is mostly random scattering, so the assumption of homoscedastic residuals is met. However, there is slight fanning, so it does not satisfy the assumption as well as the second model.
#| label: fig-m5
plot(m5)
```

We see that the second and fifth models best satisfy the assumptions of a linear model, so we will 
compare their AIC values, RMSE values, and $R^2$ values to choose the most suitable one:

```{r}
compare_performance(m2, m5) |>
  select(c(AIC, R2_conditional, RMSE)) |> 
  rename("R2" = "R2_conditional") |> 
  add_column(Model=c("Concentration x Treatment", 
                 "Concentration x Treatment x Cell Type"),
             .before = "AIC") |> 
  gt() |> 
  gtsave(here::here("tabs", "2023-05-08-mixed-effects/model-metrics.png"))
```

Although the fifth model with the three-way interaction term has a significantly lower AIC, 
we see that the second model better satisfies the homoscedasticity assumption in @fig-m2. We can see that there is a minute difference in RMSE and $R^2$ between the models, so we will opt for 
Model 2, as it has fewer degrees of freedom and is less likely to over-fit the data, but still 
creates a good model. 

To demonstrate the fit of our model to our data, we plot the regression against the data points, separating by cell type for clarity, shown in Figure @fig-csplot:
```{r}
#| label: fig-m2fit
#| fig-cap: Plots showing the increase in gene expression as concentration of activating factor increases. We see that the Wild Type cells have a lower starting intercept value. We have also labelled the gene line for each set of eleven points. There is a better fit on the gene lines that used Activating Factor 42 as the applied treatment, compared with the Placebo.

genes |> 
  ggplot(aes(x=conc, y=gene_expression, color=treatment, shape=cell_type,
             label=ifelse(conc==10, as.character(gene_line),''))) +
  geom_point() +
  geom_label_repel(nudge_x = 2,
                 direction = "y",
                 show.legend = FALSE) +
  geom_line(aes(y=predict(m2))) +
  facet_wrap(~ gene_line, scales="free") +
  # facet_wrap(~ cell_type, scales="free", 
  #            labeller = labeller(cell_type = cell_type.labs)) +
  labs(x = "Concentration (mg/mL)",
       y = "Gene Expression",
       color = "Treatment",
       shape = "Cell Type",
       label = "Gene Line") +
  theme(legend.position="bottom") +
  scale_shape(labels=c("101 Type Cell", "Wild Type Cell")) +
  paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
                                     labels=c("Activating Factor 42", "Placebo"))
ggsave(here::here("figs/2023-05-08-mixed-effects/model-plot.pdf"))
```

We also get the coefficients of our chosen model and save them for future use:
```{r}
coef(m2)$gene_line |> 
  gt(rownames_to_stub=TRUE) |> 
  fmt_number(decimals=4) |> 
  tab_stubhead(label="Gene Line") |> 
  cols_label("(Intercept)" = "Intercept",
             "conc" = "Concentration (mg/mL)",
             "treatmentP" = "Placebo",
             "cell_typeWT" = "Wild Type Cell",
             "conc:treatmentP" = "Concentration x Placebo") |> 
  gtsave(here::here("tabs", "2023-05-08-mixed-effects/m2-coefs.png"))
```



