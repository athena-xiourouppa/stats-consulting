---
title: "Data Cleaning for Gene Expression"
author: "Athena Xiourouppa"
format: pdf
---

The following document explains the data cleaning procedures performed on the
spreadsheet Karl Berator provided on the 1st of March, 2023, located in 
`raw-data` under `WTF-IISfD data.xlsx`.

# Excel Cleaning
Before importing the spreadsheet into R, we:

* deleted the figures on pages `GL-CsE` and `GL-bNo`
* removed the summary statistics on page `GL-CsE`
* shifted data cells to top-left corner to avoid blank rows when reading into R
* made cell line and treatment type names consistent
* removed cell line and treatment type names from spreadsheet and copied separately.

# R Cleaning
We now read the spreadsheet `modified-WTF-IISfD data.xlsx` under `data` into R:
```{r, results=FALSE}
# Load necessary packages
pacman::p_load(tidyverse, readxl, reshape2, gt)

# Obtain names of sheets
sheet_names <- excel_sheets(here::here("data/modified-WTF-IISfD-data.xlsx"))

# Read in each sheet
wtf_iisfd <- lapply(sheet_names, 
                 function(n) read_excel(here::here("data/modified-WTF-IISfD-data.xlsx"),
                                        sheet=n))

# Create more useful names using data
better_names_gene <- c("GL-CsE-WT-P-1", "GL-bNo-WT-P-2",
                  "GL-JZC-WT-A42-1", "GL-fUg-WT-A42-2", 
                  "GL-jEK-C101-P-1", "GL-Hoe-C101-P-2",
                  "GL-Rza-C101-A42-1", "GL-xpo-C101-A42-2")
better_names <- c("WT-P-1", "WT-P-2",
                  "WT-A42-1", "WT-A42-2", 
                  "C101-P-1", "C101-P-2",
                  "C101-A42-1", "C101-A42-2")

# Name sheets
names(wtf_iisfd) <- better_names

# Show tibble
print(wtf_iisfd)
```

One trial has a missing value in the gene expression column. Firstly, we label it as NA, and then impute with the mean.
```{r}
wtf_iisfd$`WT-A42-2`$gene_expression[6] <- NA
wtf_iisfd$`WT-A42-2`$gene_expression[6] <- mean(wtf_iisfd$`WT-A42-2`$gene_expression,
                                                na.rm=TRUE)
```

We save the cleaned data as a `.csv` with the gene line inclusive names, for future use, in two forms. Firstly, as a series of tibbles:
```{r}
grouped_trials_genes <- wtf_iisfd
names(grouped_trials_genes) <- better_names_gene
write.csv(grouped_trials_genes, here::here("data","clean-gene-WTF-IISfD-data.csv"))
```

Then, as a melted, singular tibble, where `L1` is the label of the gene type, cell type, activating factor, and trial number.
```{r}
melted_genes <- grouped_trials_genes |> 
  melt(id = "conc")
```

We further split `L1` into separate columns and save the labels as new columns:
```{r}
gene_line <- c()
cell_type <- c()
treatment <- c()
trial_number <- c()

for(i in 1:nrow(melted_genes)){
  split_label <- str_split(melted_genes[i, ]$L1, "-")[[1]]
  gene_line[i] <- split_label[2]
  cell_type[i] <- split_label[3]
  treatment[i] <- split_label[4]
  trial_number[i] <- split_label[5]
}

melted_genes <- melted_genes |> 
  select(-c(L1, variable)) |> 
  rename(gene_expression = value) |> 
  mutate(gene_line = gene_line,
         cell_type = cell_type,
         treatment = treatment,
         trial_number = trial_number)
```

Finally, we save this melted tibble as a `.csv` file for future use:
```{r}
write.csv(melted_genes, here::here("data", "melted-gene-WTF-IISfD-data.csv"))
```

Since we are summarising and there are two trials per cell line and treatment, we merge the separated trial tibbles and take an average of gene expression for every concentration:
```{r}
WT_P <- right_join(wtf_iisfd$`WT-P-1`, wtf_iisfd$`WT-P-2`, by="conc") 
WT_A42 <- right_join(wtf_iisfd$`WT-A42-1`, wtf_iisfd$`WT-A42-2`, by="conc")
CT101_P <- right_join(wtf_iisfd$`C101-P-1`, wtf_iisfd$`C101-P-2`, by="conc") 
CT101_A42 <- right_join(wtf_iisfd$`C101-A42-1`, wtf_iisfd$`C101-A42-2`, by="conc")

# Save into new list
grouped_trials <- list(WT_P, WT_A42, CT101_P, CT101_A42)
names(grouped_trials) <- c("WT_P", "WT_A42", "CT101_P", "CT101_A42")
```

# Tabular Summary
We now summarise the average gene expression for every concentration.
```{r}
for(i in 1:4){
  grouped_trials[[i]] <-
    grouped_trials[[i]] |> 
    transmute(conc, 
              mean_ge = rowMeans(across(-conc)), 
              sd_ge = apply(across(-conc), 1, sd))
}

summary_trials <- tibble(conc = grouped_trials[[1]]$conc,
                         WT_P_mean = grouped_trials[[1]]$mean_ge,
                         WT_A42_mean = grouped_trials[[2]]$mean_ge,
                         CT101_P_mean = grouped_trials[[3]]$mean_ge,
                         CT101_A42_mean = grouped_trials[[4]]$mean_ge,
                         WT_P_sd = grouped_trials[[1]]$sd_ge,
                         WT_A42_sd = grouped_trials[[2]]$sd_ge,
                         CT101_P_sd = grouped_trials[[3]]$sd_ge,
                         CT101_A42_sd = grouped_trials[[4]]$sd_ge,)
head(summary_trials)
```

Create nicer table for Wild-Type cell summary using `gt`:
```{r}
summary_trials |> 
  select(c(conc, WT_P_mean, WT_A42_mean, WT_P_sd, WT_A42_sd)) |> 
  gt() |> 
  cols_label(conc = "Concentration (mg/mL)", 
             WT_P_mean = "Placebo", 
             WT_A42_mean = "Activating Factor 42",
             WT_P_sd = "Placebo",
             WT_A42_sd = "Activating Factor 42") |> 
  tab_header(title = md("**Summary of Gene Expression in Wild-Type Cells**")) |> 
  fmt_number(columns = c(WT_P_mean, WT_A42_mean, WT_P_sd, WT_A42_sd),
             decimals = 2) |> 
  cols_align("center") |> 
  tab_spanner(columns = c(WT_P_mean, WT_A42_mean),
              label = "Average Gene Expression") |> 
  tab_spanner(columns = c(WT_P_sd, WT_A42_sd),
              label = "Standard Deviation of Gene Expression") |> 
  gtsave(here::here("tabs/2023-03-03-data-cleaning/wt-summary.png"))
  
```

Create nicer table for 101-Type cell summary using `gt`:
```{r}
summary_trials |> 
  select(c(conc, CT101_P_mean, CT101_A42_mean, CT101_P_sd, CT101_A42_sd)) |> 
  gt() |> 
  cols_label(conc = "Concentration (mg/mL)", 
             CT101_P_mean = "Placebo", 
             CT101_A42_mean = "Activating Factor 42",
             CT101_P_sd = "Placebo", 
             CT101_A42_sd = "Activating Factor 42",) |> 
  tab_header(title = md("**Summary of Gene Expression in 101-Type Cells**")) |> 
  fmt_number(columns = c(CT101_P_mean, CT101_A42_mean, CT101_P_sd, CT101_A42_sd),
             decimals = 2) |> 
  cols_align("center") |> 
  tab_spanner(columns = c(CT101_P_mean, CT101_A42_mean),
              label = "Average Gene Expression") |> 
  tab_spanner(columns = c(CT101_P_sd, CT101_A42_sd),
              label = "Standard Deviation of Gene Expression") |> 
  gtsave(here::here("tabs/2023-03-03-data-cleaning/101-summary.png"))
  
```

# Figures
We now plot the summaries as line graphs for each cell line and treatment type:
```{r}
# Treatment on Wild cells
summary_trials |> 
  melt(id="conc") |> 
  filter(str_detect(variable, "WT")) |> 
  filter(str_detect(variable, "mean")) |> 
  ggplot(aes(conc, value, col=variable)) +
  geom_point() +
  geom_smooth(method="lm") +
  labs(x = "Concentration (mg/mL)",
       y = "Gene Expression",
       title = "Effect of Activating Factor 42 on Gene Expression in \nWild-Type Cells"
       ) +
  harrypotter::scale_color_hp_d("Ravenclaw",
                                labels = c("Placebo", "Activating Factor 42"),
                                name = "Treatment")
ggsave(here::here("figs/2023-03-03-data-cleaning/wt-linegraph.png"))
```
```{r}
# Treatment on 101 Cells
summary_trials |> 
  melt(id="conc") |> 
  filter(str_detect(variable, "CT101")) |> 
  filter(str_detect(variable, "mean")) |> 
  ggplot(aes(conc, value, col=variable)) +
  geom_point() +
  geom_smooth(method="lm") +
  labs(x = "Concentration (mg/mL)",
       y = "Gene Expression",
       title = "Effect of Activating Factor 42 on Gene Expression in \n101-Type Cells"
       ) +
    harrypotter::scale_color_hp_d("Gryffindor",
                                labels = c("Placebo", "Activating Factor 42"),
                                name = "Treatment")
ggsave(here::here("figs/2023-03-03-data-cleaning/101-linegraph.png"))
```
We also display the spread of values for each cell line and treatment combination
```{r}
# Placebo on cells
summary_trials |> 
  melt(id="conc") |> 
  filter(str_detect(variable, "P")) |> 
  filter(str_detect(variable, "mean")) |> 
  ggplot(aes(conc, value, col=variable)) +
  geom_boxplot() +
  labs(x = "Concentration (mg/mL)",
       y = "Gene Expression",
       title = "Spread of Placebo on Gene Expression in Cells"
       ) +
    harrypotter::scale_color_hp_d("Ravenclaw",
                                labels = c("Wild", "101"),
                                name = "Cell Type")
ggsave(here::here("figs/2023-03-03-data-cleaning/placebo-boxplot.png"))
```

```{r}
# A42 on cells
summary_trials |> 
  melt(id="conc") |> 
  filter(str_detect(variable, "A42")) |> 
  filter(str_detect(variable, "mean")) |> 
  ggplot(aes(conc, value, col=variable)) +
  geom_boxplot() +
  labs(x = "Concentration (mg/mL)",
       y = "Gene Expression",
       title = "Spread of Activating Factor 42 on Gene Expression in Cells"
       ) +
  harrypotter::scale_color_hp_d("Gryffindor",
                                labels = c("Wild", "101"),
                                name = "Cell Type")
ggsave(here::here("figs/2023-03-03-data-cleaning/a42-boxplot.png"))
```

```{r}
# Treatment on WT cells
summary_trials |> 
  melt(id="conc") |> 
  filter(str_detect(variable, "WT")) |> 
  filter(str_detect(variable, "mean")) |> 
  ggplot(aes(conc, value, col=variable)) +
  geom_boxplot() +
  labs(x = "Concentration (mg/mL)",
       y = "Gene Expression",
       title = "Spread of Activating Factor 42 on Gene Expression in \nWild Type Cells"
       ) +
  harrypotter::scale_color_hp_d("Ravenclaw",
                                labels = c("Placebo", "Activating Factor 42"),
                                name = "Treatment")
ggsave(here::here("figs/2023-03-03-data-cleaning/wt-boxplot.png"))
```

```{r}
# Treatment on 101 cells
summary_trials |> 
  melt(id="conc") |> 
  filter(str_detect(variable, "CT101")) |> 
  filter(str_detect(variable, "mean")) |> 
  ggplot(aes(conc, value, col=variable)) +
  geom_boxplot() +
  labs(x = "Concentration (mg/mL)",
       y = "Gene Expression",
       title = "Spread of Activating Factor 42 on Gene Expression in \n101-Type Cells"
       ) +
  harrypotter::scale_color_hp_d("Gryffindor",
                                labels = c("Placebo", "Activating Factor 42"),
                                name = "Treatment")
ggsave(here::here("figs/2023-03-03-data-cleaning/101-boxplot.png"))
```