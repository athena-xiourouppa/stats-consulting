---
title: "Plot Adjustment for Gene Expression"
author: "Athena Xiourouppa"
format: pdf
---

The following document generates a plot of gene expression vs concentration for 
activating factor 42 and the placebo on the gene expression data sent on 24/3.

First, we load in the necessary packages to work with tibbles, read in Excel spreadsheets,
melt tibbles, work with strings, colour plots, work with tables, save `.tiff` files, 
merge plot objects, write LaTeX captions, label plots, and import fonts.
```{r}
# Load necessary packages
pacman::p_load(tidyverse, readxl, reshape2, stringr, viridis, gt, 
               webshot2, patchwork, latex2exp, ggrepel, extrafont)
```

We read in the melted data from our previous work (see `2023-03-03-data-cleaning`):
```{r}
melted_genes <- read.csv(here::here("data", "melted-gene-WTF-IISfD-data.csv"))
```

We will create two plots, one of gene expression vs concentration, separated by treatment type, in Wild Type cells and 101 Type cells. Each plot will also have the end data points in each experiment 
labelled by gene line.

We define a colour scheme that matches the one shown in `gene_plot.png` in the `resources` folder:
```{r}
# Define colour scheme to match Karl's
ravenclaw_cols <- alpha(c(harrypotter::hp_palettes$ravenclaw[2],
                    harrypotter::hp_palettes$ravenclaw2[3]), 0.8)
```


```{r}
p_wt <- 
  melted_genes |> 
  filter(cell_type == "WT") |>  # Wild Type cells only 
  ggplot(aes(x=conc, y=gene_expression, fill=treatment, 
             label = ifelse(conc==10, as.character(gene_line),''))) +
  geom_point(color='black', size=3, shape=21) + 
  geom_label_repel(nudge_x = 1,
                   direction = "y",
                   hjust = 0,
                   min.segment.length = 0,
                   family = "Times",
                   show.legend = FALSE) +
  scale_fill_manual(values = ravenclaw_cols,
                    labels = c("Activating factor 42", "Placebo")) +
  labs(x = TeX(r"(\mu\g/mL)"),
       y = "Gene Expression",
       fill = "Treatment") +
  theme_bw() +  # Remove grey background
  scale_x_continuous(breaks=0:10,
                     limits=c(0,11)) +  # Adjust scale
  theme(text = element_text(family = "Times", size=10), # Adjust font
        legend.key = element_rect(fill="white")) +
  guides(fill = guide_legend(override.aes = list(label = ""))) +
  theme(legend.position="bottom") +
  ggtitle("Wild-type")
p_wt
```
And then for 101 Type cells:
```{r}
p_101 <- 
  melted_genes |> 
  filter(cell_type == "C101") |>  # Wild Type cells only 
  ggplot(aes(x=conc, y=gene_expression, fill=treatment, 
             label = ifelse(conc==10, as.character(gene_line),''))) +
  geom_point(color='black', size=3, shape=21) + 
  geom_label_repel(nudge_x = 1,
                   direction = "y",
                   hjust = 0,
                   min.segment.length = 0,
                   family = "Times",
                   show.legend = FALSE) +
  scale_fill_manual(values = ravenclaw_cols,
                    labels = c("Activating factor 42", "Placebo")) +
  labs(x = TeX(r"(\mu\g/mL)"),
       y = "Gene Expression",
       fill = "Treatment") +
  theme_bw() +  # Remove grey background
  scale_x_continuous(breaks=0:10,
                     limits=c(0,11)) +  # Adjust scale
  theme(text = element_text(family = "Times", size=10), # Adjust font
        legend.key = element_rect(fill="white")) +
  guides(fill = guide_legend(override.aes = list(label = ""))) +
  theme(legend.position="bottom") +
  ggtitle("Cell-type 101")
p_101
```

We then combine the plots:
```{r}
p_cells <- p_wt + p_101 + 
  plot_annotation(tag_levels = 'A') +
  plot_layout(guides = "collect") & 
  theme(legend.position="bottom",
        legend.key = element_rect(fill="white")) 
p_cells
```

Finally, we export the graph as a `.tiff` file as requested:
```{r, eval=FALSE}
ggsave(filename=here::here("figs", "ge_tnr.tiff"),
       plot = p_cells,
       units = "in",
       width = 9,
       height = 6,
       dpi = 500)
```
