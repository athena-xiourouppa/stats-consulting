#| tab-cap: ANOVA table showing difference in metrics for the fifth model's fixed effects. At the 5% level, treatment, cell type, and their interaction are not significant, but the three-way interaction term with concenration is, so we do not discard them. Significant p-values are italicised for reference.
anova(m5) |>
select(c("F value", "Pr(>F)")) |>
gt(rownames_to_stub=TRUE) |>
fmt_number(decimals=4) |>
fmt_scientific(columns = 3, decimals = 2) |>
tab_stubhead(label="Predictor") |>
tab_style_body(
style = cell_text(style = "italic"),
columns = `Pr(>F)`,
fn = function(x) x > 0 & x <= 0.05,
) |>
gtsummary::as_kable()
pacman::p_load(tidyverse, gt, gtsummary)
knitr::opts_chunk$set(fig.pos = 'H')
knitr::opts_chunk$set(fig.pos = 'H')
pacman::p_load(tidyverse, lme4, ggrepel, paletteer, vip, kableExtra,
performance, gt, lmerTest, gtsummary)
genes <- read.csv(here::here("data", "melted-gene-WTF-IISfD-data.csv"))
#| label: tab-anova
#| tab-cap: ANOVA table showing difference in metrics for the fifth model's fixed effects. At the 5% level, treatment, cell type, and their interaction are not significant, but the three-way interaction term with concenration is, so we do not discard them. Significant p-values are italicised for reference.
anova(m5) |>
select(c("F value", "Pr(>F)")) |>
gt(rownames_to_stub=TRUE) |>
fmt_number(decimals=4) |>
fmt_scientific(columns = 3, decimals = 2) |>
tab_stubhead(label="Predictor") |>
tab_style_body(
style = cell_text(style = "italic"),
columns = `Pr(>F)`,
fn = function(x) x > 0 & x <= 0.05,
) |>
gtsummary::as_kable()
#| label: tab-anova
#| tab-cap: ANOVA table showing difference in metrics for the fifth model's fixed effects. At the 5% level, treatment, cell type, and their interaction are not significant, but the three-way interaction term with concenration is, so we do not discard them. Significant p-values are italicised for reference.
anova(m5) |>
select(c("F value", "Pr(>F)")) |>
gt(rownames_to_stub=TRUE) |>
fmt_number(decimals=4) |>
fmt_scientific(columns = 3, decimals = 2) |>
tab_stubhead(label="Predictor") |>
tab_style_body(
style = cell_text(style = "italic"),
columns = `Pr(>F)`,
fn = function(x) x > 0 & x <= 0.05,
)
fixef(m5) |>
as.data.frame()
fixef(m5) |>
as.data.frame() |>
rename("(Intercept)" = "Intercept")
colnames(as.data.frame(fixed(m5)))
colnames(as.data.frame(fixef(m5)))
fixef(m5) |>
as.data.frame() |>
mutate("(Intercept)" = "Intercept")
fixef(m5)
fixef(m5)$`(Intercept)`
fixef(m5)$(Intercept)
fixef(m5)[0]
fixef(m5)[1]
fixef(m5)[1]$name
fixef(m5)[1][0]
fixef(m5)[1][1]
fixef(m5)[[1]]
fixef(m5)[1][1]
fixef(m5)[1][0]
fixef(m5)[1]
class(fixef(m5))
names(fixef(m5))
#| label: tbl-coef
#| layout-ncol: 2
#| tbl-cap: Coefficients of the chosen model.
#| tbl-subcap:
#| - "Random effects terms for intercept. We notice the variation in intercept across gene lines is not particularly large, with the exception of Rza and xpo, which fall out of the 10-13 gene expression units that the other gene lines satisfy."
#| - "Model coefficients for fixed effects. The slope is just over 3 gene expression units. We subtract almost 5 units from the intercept if placebo treatment is used and roughly 0.3 units if we apply treatment to a Wild Type cell. We also subtract 1.4 units from the the slope if placebo treatment is used, 0.12 units if a Wild Type cell is used, and an additional 0.97 if both are used. However, we add 0.08 to the intercept if placebo treatment is used on a Wild Type cell. This mostly indicates that 101 Type cells with Activating Factor 42 applied exhibit the greatest gene expression."
fixed <- fixef(m5)
names(fixed)[1] <- "Intercept"
fixed |>
as.data.frame() |>
mutate("(Intercept)" = "Intercept") |>
gt(rownames_to_stub=TRUE) |>
fmt_number(decimals=4) |>
cols_label("fixef(m5)" = "Coefficient") |>
tab_stubhead(label="Term")
#| label: tbl-coef
#| layout-ncol: 2
#| tbl-cap: Coefficients of the chosen model.
#| tbl-subcap:
#| - "Random effects terms for intercept. We notice the variation in intercept across gene lines is not particularly large, with the exception of Rza and xpo, which fall out of the 10-13 gene expression units that the other gene lines satisfy."
#| - "Model coefficients for fixed effects. The slope is just over 3 gene expression units. We subtract almost 5 units from the intercept if placebo treatment is used and roughly 0.3 units if we apply treatment to a Wild Type cell. We also subtract 1.4 units from the the slope if placebo treatment is used, 0.12 units if a Wild Type cell is used, and an additional 0.97 if both are used. However, we add 0.08 to the intercept if placebo treatment is used on a Wild Type cell. This mostly indicates that 101 Type cells with Activating Factor 42 applied exhibit the greatest gene expression."
fixed <- fixef(m5)
names(fixed)[1] <- "Intercept"
fixed |>
as.data.frame() |>
gt(rownames_to_stub=TRUE) |>
fmt_number(decimals=4) |>
cols_label("fixef(m5)" = "Coefficient") |>
tab_stubhead(label="Term")
fixed <- fixef(m5)
names(fixed)[1] <- "Intercept"
fixed
fixed |>
as.data.frame()
fixed |>
as.data.frame() |>
gt(rownames_to_stub=TRUE)
#| label: tbl-coef
#| layout-ncol: 2
#| tbl-cap: Coefficients of the chosen model.
#| tbl-subcap:
#| - "Random effects terms for intercept. We notice the variation in intercept across gene lines is not particularly large, with the exception of Rza and xpo, which fall out of the 10-13 gene expression units that the other gene lines satisfy."
#| - "Model coefficients for fixed effects. The slope is just over 3 gene expression units. We subtract almost 5 units from the intercept if placebo treatment is used and roughly 0.3 units if we apply treatment to a Wild Type cell. We also subtract 1.4 units from the the slope if placebo treatment is used, 0.12 units if a Wild Type cell is used, and an additional 0.97 if both are used. However, we add 0.08 to the intercept if placebo treatment is used on a Wild Type cell. This mostly indicates that 101 Type cells with Activating Factor 42 applied exhibit the greatest gene expression."
fixed <- fixef(m5)
names(fixed)[1] <- "Intercept"
fixed |>
as.data.frame() |>
gt(rownames_to_stub=TRUE) |>
fmt_number(decimals=4) |>
cols_label("fixed" = "Coefficient") |>
tab_stubhead(label="Term")
ranef(m5)$gene_line |>
gt(rownames_to_stub=TRUE) |>
fmt_number(decimals=4) |>
tab_stubhead(label="Gene Line")
knitr::opts_chunk$set(fig.pos = 'H', message=FALSE)
knitr::opts_chunk$set(fig.pos = 'H', message=FALSE, warning=FALSE)
#| label: tab-comp
#| tab-cap: Quantitative metrics for the two models. We see that the three-way interaction model has a much lower AIC than the Concentration x Treatment model, but the RMSE and $R^2$ are both quite similar. Given that the three-way interaction model has more degrees of freedom, we have chosen the Concentration x Treatment model.
gt_comp <-
compare_performance(m2, m5) |>
select(c(AIC, R2_conditional, RMSE)) |>
rename("R2" = "R2_conditional") |>
add_column(Model=c("Concentration x Treatment",
"Concentration x Treatment x Cell Type"),
.before = "AIC") |>
gt()
knitr::knit_print(gt_comp)
#| label: tab-comp
#| tab-cap: Quantitative metrics for the two models. We see that the three-way interaction model has a much lower AIC than the Concentration x Treatment model, but the RMSE and $R^2$ are both quite similar. Given that the three-way interaction model has more degrees of freedom, we have chosen the Concentration x Treatment model.
gt_comp <-
compare_performance(m2, m5) |>
select(c(AIC, R2_conditional, RMSE)) |>
rename("R2" = "R2_conditional") |>
add_column(Model=c("Concentration x Treatment",
"Concentration x Treatment x Cell Type"),
.before = "AIC") |>
gt()
knitr::knit_print(gt_comp)
#| label: tab-comp
#| tab-cap: Quantitative metrics for the two models. We see that the three-way interaction model has a much lower AIC than the Concentration x Treatment model, but the RMSE and $R^2$ are both quite similar. Given that the three-way interaction model has more degrees of freedom, we have chosen the Concentration x Treatment model.
gt_comp <-
compare_performance(m2, m5) |>
select(c(AIC, R2_conditional, RMSE)) |>
rename("R2" = "R2_conditional") |>
add_column(Model=c("Concentration x Treatment",
"Concentration x Treatment x Cell Type"),
.before = "AIC") |>
gt() |>
as_latex()
knitr::knit_print(gt_comp)
#| label: fig-m5fit
#| fig-cap: Plots showing the increase in gene expression as concentration of activating factor increases. We see that the Wild Type cells have a lower starting intercept value. We have also labelled the gene line for each set of eleven points. There is a better fit on the gene lines that used Activating Factor 42 as the applied treatment, compared with the Placebo.
genes |>
ggplot(aes(x=conc, y=gene_expression, color=treatment, shape=cell_type)) +
geom_point() +
geom_line(aes(y=predict(m5))) +
facet_wrap(~ gene_line, scales="free") +
labs(x = "Concentration (mg/mL)",
y = "Gene Expression",
color = "Treatment",
shape = "Cell Type",
label = "Gene Line") +
theme(legend.position="bottom") +
scale_shape(labels=c("101 Type Cell", "Wild Type Cell")) +
paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
labels=c("Activating Factor 42", "Placebo"))
ggsave(here::here("figs/2023-05-08-mixed-effects/model-plot.pdf"))
#| label: tbl-comp
#| tbl-cap: Quantitative metrics for the two models. We see that the three-way interaction model has a much lower AIC than the Concentration x Treatment model, but the RMSE and R squared are both quite similar. Given that the three-way interaction model has more degrees of freedom, we have chosen the Concentration x Treatment model.
#| tbl-cap-location: bottom
compare_performance(m2, m5) |>
select(c(AIC, R2_conditional, RMSE)) |>
rename("R2" = "R2_conditional") |>
add_column(Model=c("Concentration x Treatment",
"Concentration x Treatment x Cell Type"),
.before = "AIC") |>
gt() |>
fmt_number(decimals = 4)
#| label: fig-plot
#| fig-cap: Plot of gene expression versus concentration of treatment factor for the two cell types and two treatment factors, indicated by shape and colour, respectively. We have also labelled the gene lines at their final observations. We notice that the Wild Type cells have a lower starting intercept compared with the 101 Type cells. The linear model fits the Wild Type cells more accurately than the 101 Type cells, and the same applies for the placebo treatment versus than Activating Factor 42.
#| width: 40%
genes |>
ggplot(aes(x=conc, y=gene_expression, color=treatment, shape=cell_type)) +
geom_point() +
geom_line(aes(y=predict(m5))) +
facet_wrap(~ gene_line, scales="free") +
labs(x = "Concentration (mg/mL)",
y = "Gene Expression",
color = "Treatment",
shape = "Cell Type",
label = "Gene Line") +
theme(legend.position="bottom") +
scale_shape(labels=c("101 Type Cell", "Wild Type Cell")) +
paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
labels=c("Activating Factor 42", "Placebo"))
#| label: fig-plot
#| fig-cap: Plot of gene expression versus concentration of treatment factor for the two cell types and two treatment factors, indicated by shape and colour, respectively. We have also labelled the gene lines at their final observations. We notice that the Wild Type cells have a lower starting intercept compared with the 101 Type cells. The linear model fits the Wild Type cells more accurately than the 101 Type cells, and the same applies for the placebo treatment versus than Activating Factor 42.
#| fig-size: 300
knitr::include_graphics(here::here("figs", "2023-05-08-mixed-effects/model-plot.pdf"))
# genes |>
#   ggplot(aes(x=conc, y=gene_expression, color=treatment, shape=cell_type)) +
#   geom_point() +
#   geom_line(aes(y=predict(m5))) +
#   facet_wrap(~ gene_line, scales="free") +
#   labs(x = "Concentration (mg/mL)",
#        y = "Gene Expression",
#        color = "Treatment",
#        shape = "Cell Type",
#        label = "Gene Line") +
#   theme(legend.position="bottom") +
#   scale_shape(labels=c("101 Type Cell", "Wild Type Cell")) +
#   paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
#                                      labels=c("Activating Factor 42", "Placebo"))
#| label: tbl-coef
#| tbl-cap: "Coefficients of the chosen model."
#| tbl-subcap:
#|   - "Model coefficients for fixed effects. The slope (concentration term) is just over 3 gene expression units. We subtract almost 5 units from the intercept if placebo treatment is used and roughly 0.3 units if we apply treatment to a Wild Type cell. However, we add 0.08 to the intercept if placebo treatment is used on a Wild Type cell. We also subtract 1.4 units from the the slope if placebo treatment is used, 0.12 units if a Wild Type cell is used, and an additional 0.97 if both are used. This mostly indicates that 101 Type cells with Activating Factor 42 applied exhibit the greatest gene expression."
#|   - "Random effects terms for intercept. These terms are added to the baseline intercept of 9.9175 gene expression units in the fixed effects table, and are mostly within 1 gene expression unit, with the exception of Rza and xpo which subtract and add 4.37 gene expression units, respectively."
#| layout-ncol: 2
f <- fixed |>
as.data.frame() |>
gt(rownames_to_stub=TRUE) |>
fmt_number(decimals=4) |>
cols_label("fixed" = "Coefficient") |>
tab_stubhead(label="Term")
f
r <- ranef(m5)$gene_line |>
gt(rownames_to_stub=TRUE) |>
fmt_number(decimals=4) |>
tab_stubhead(label="Gene Line")
r
pacman::p_load(tidyverse, lme4, ggrepel, paletteer, vip, kableExtra,
performance, gt, lmerTest)
genes <- read.csv(here::here("data", "melted-gene-WTF-IISfD-data.csv"))
head(genes)
#| label: fig-eda
#| fig-cap: Plots showing the increase in gene expression as concentration of activating factor increases. We see that the Wild Type cells have a lower starting intercept value. We have also labelled the gene line for each set of eleven points.
genes |>
ggplot(aes(x=conc, y=gene_expression, color=treatment,
label=ifelse(conc==10, as.character(gene_line),''))) +
geom_point() +
geom_label_repel(nudge_x = 2,
direction = "y",
show.legend = FALSE) +
facet_wrap(~ cell_type, scales="free",
labeller = labeller(cell_type = c("C101" = "101 Type",
"WT" = "Wild Type"))) +
labs(x = "Concentration (mg/mL)",
y = "Gene Expression",
color = "Treatment",
label = "Gene Line") +
theme(legend.position="bottom") +
paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
labels=c("Activating Factor 42", "Placebo"))
ggsave(here::here("figs/2023-05-08-mixed-effects/model-eda.pdf"))
m1 <- lmer(gene_expression ~
conc + treatment + cell_type + (1 | gene_line),
data = genes)
summary(m1)
ranova(m1)
anova(m1)
#| fig-cap: The residuals vs fitted plot for the first model. We see that there is curvature about the zero-line, indicating poor homoscedasticity.
#| label: fig-m1
plot(m1)
m2 <- lmer(gene_expression ~
conc * treatment + cell_type + (1 | gene_line),
data = genes)
summary(m2)
ranova(m2)
anova(m2)
#| fig-cap: The residuals vs fitted plot for the second model. We see that there is random scattering, so the model satisfies the homoscedasticity assumption.
#| label: fig-m2
plot(m2)
m3 <- lmer(gene_expression ~
conc + treatment * cell_type + (1 | gene_line),
data = genes)
summary(m3)
ranova(m3)
anova(m3)
#| fig-cap: The residuals vs fitted plot for the third model. We see that there is strong curvature, so the model does not satisfy the homoscedasticity assumption.
#| label: fig-m3
plot(m3)
m4 <- lmer(gene_expression ~
treatment + conc * cell_type + (1 | gene_line),
data = genes)
summary(m4)
ranova(m4)
anova(m4)
#| fig-cap: The residuals vs fitted plot for the fourth model. We see that there is strong curvature, so the model does not satisfy the homoscedasticity assumption.
#| label: fig-m4
plot(m4)
m5 <- lmer(gene_expression ~
conc * treatment * cell_type + (1 | gene_line),
data = genes)
summary(m5)
ranova(m5) |>
select("Pr(>Chisq)") |>
gt(rownames_to_stub=TRUE) |>
fmt_number(decimals=4) |>
tab_stubhead(label="Random Effect") |>
fmt_scientific(columns = 2, decimals = 2) |>
tab_style_body(
style = cell_text(style = "italic"),
columns = `Pr(>Chisq)`,
fn = function(x) x > 0 & x <= 0.05,
) |>
gtsave(here::here("tabs", "2023-05-08-mixed-effects/m5-ranova.png"))
anova(m5) |>
select(c("F value", "Pr(>F)")) |>
gt(rownames_to_stub=TRUE) |>
fmt_number(decimals=4) |>
fmt_scientific(columns = 3, decimals = 2) |>
tab_stubhead(label="Predictor") |>
tab_style_body(
style = cell_text(style = "italic"),
columns = `Pr(>F)`,
fn = function(x) x > 0 & x <= 0.05,
) |>
gtsave(here::here("tabs", "2023-05-08-mixed-effects/m5-anova.png"))
#| fig-cap: The residuals vs fitted plot for the final model. We see that there is mostly random scattering, so the assumption of homoscedastic residuals is met. However, there is slight fanning, so it does not satisfy the assumption as well as the second model.
#| label: fig-m5
plot(m5)
pdf(here::here("figs", "2023-05-08-mixed-effects/m5-assumptions.pdf"))
plot(m5)
dev.off()
compare_performance(m2, m5) |>
select(c(AIC, R2_conditional, RMSE)) |>
rename("R2" = "R2_conditional") |>
add_column(Model=c("Concentration x Treatment",
"Concentration x Treatment x Cell Type"),
.before = "AIC") |>
gt() |>
gtsave(here::here("tabs", "2023-05-08-mixed-effects/model-metrics.png"))
#| label: fig-m5fit
#| fig-cap: Plots showing the increase in gene expression as concentration of activating factor increases. We see that the Wild Type cells have a lower starting intercept value. We have also labelled the gene line for each set of eleven points. There is a better fit on the gene lines that used Activating Factor 42 as the applied treatment, compared with the Placebo.
genes |>
ggplot(aes(x=conc, y=gene_expression, color=treatment, shape=cell_type)) +
geom_point() +
geom_line(aes(y=predict(m5))) +
facet_wrap(~ cell_type, scales="free") +
labs(x = "Concentration (mg/mL)",
y = "Gene Expression",
color = "Treatment",
shape = "Cell Type",
label = "Gene Line") +
theme(legend.position="bottom") +
scale_shape(labels=c("101 Type Cell", "Wild Type Cell")) +
paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
labels=c("Activating Factor 42", "Placebo"))
#ggsave(here::here("figs/2023-05-08-mixed-effects/model-plot.pdf"))
#| label: fig-m5fit
#| fig-cap: Plots showing the increase in gene expression as concentration of activating factor increases. We see that the Wild Type cells have a lower starting intercept value. We have also labelled the gene line for each set of eleven points. There is a better fit on the gene lines that used Activating Factor 42 as the applied treatment, compared with the Placebo.
genes |>
ggplot(aes(x=conc, y=gene_expression, color=treatment, shape=cell_type)) +
geom_point() +
geom_line(aes(y=predict(m5))) +
facet_wrap(~ trial_number, scales="free") +
labs(x = "Concentration (mg/mL)",
y = "Gene Expression",
color = "Treatment",
shape = "Cell Type",
label = "Gene Line") +
theme(legend.position="bottom") +
scale_shape(labels=c("101 Type Cell", "Wild Type Cell")) +
paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
labels=c("Activating Factor 42", "Placebo"))
#ggsave(here::here("figs/2023-05-08-mixed-effects/model-plot.pdf"))
#| label: fig-m5fit
#| fig-cap: Plots showing the increase in gene expression as concentration of activating factor increases. We see that the Wild Type cells have a lower starting intercept value. We have also labelled the gene line for each set of eleven points. There is a better fit on the gene lines that used Activating Factor 42 as the applied treatment, compared with the Placebo.
genes |>
ggplot(aes(x=conc, y=gene_expression, color=treatment, shape=cell_type)) +
geom_point() +
geom_line(aes(y=predict(m5))) +
facet_wrap(~ treatment, scales="free") +
labs(x = "Concentration (mg/mL)",
y = "Gene Expression",
color = "Treatment",
shape = "Cell Type",
label = "Gene Line") +
theme(legend.position="bottom") +
scale_shape(labels=c("101 Type Cell", "Wild Type Cell")) +
paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
labels=c("Activating Factor 42", "Placebo"))
#ggsave(here::here("figs/2023-05-08-mixed-effects/model-plot.pdf"))
#| label: fig-m5fit
#| fig-cap: Plots showing the increase in gene expression as concentration of activating factor increases. We see that the Wild Type cells have a lower starting intercept value. We have also labelled the gene line for each set of eleven points. There is a better fit on the gene lines that used Activating Factor 42 as the applied treatment, compared with the Placebo.
genes |>
ggplot(aes(x=conc, y=gene_expression, color=treatment, shape=cell_type,
label=ifelse(conc==10, as.character(gene_line),''))) +
geom_point() +
geom_line(aes(y=predict(m5))) +
facet_wrap(~ trial_number, scales="free") +
labs(x = "Concentration (mg/mL)",
y = "Gene Expression",
color = "Treatment",
shape = "Cell Type",
label = "Gene Line") +
theme(legend.position="bottom") +
scale_shape(labels=c("101 Type Cell", "Wild Type Cell")) +
paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
labels=c("Activating Factor 42", "Placebo"))
#ggsave(here::here("figs/2023-05-08-mixed-effects/model-plot.pdf"))
#| label: fig-m5fit
#| fig-cap: Plots showing the increase in gene expression as concentration of activating factor increases. We see that the Wild Type cells have a lower starting intercept value. We have also labelled the gene line for each set of eleven points. There is a better fit on the gene lines that used Activating Factor 42 as the applied treatment, compared with the Placebo.
genes |>
ggplot(aes(x=conc, y=gene_expression, color=treatment, shape=cell_type,
label=ifelse(conc==10, as.character(gene_line),''))) +
geom_point() +
geom_line(aes(y=predict(m5))) +
geom_label_repel(nudge_x = 2,
direction = "y",
show.legend = FALSE) +
facet_wrap(~ trial_number, scales="free") +
labs(x = "Concentration (mg/mL)",
y = "Gene Expression",
color = "Treatment",
shape = "Cell Type",
label = "Gene Line") +
theme(legend.position="bottom") +
scale_shape(labels=c("101 Type Cell", "Wild Type Cell")) +
paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
labels=c("Activating Factor 42", "Placebo"))
#ggsave(here::here("figs/2023-05-08-mixed-effects/model-plot.pdf"))
#| label: fig-m5fit
#| fig-cap: Plots showing the increase in gene expression as concentration of activating factor increases, separated by replication. We see that the Wild Type cells have a lower starting intercept value. We have also labelled the gene line for each set of eleven points. There is a better fit on the gene lines that used Activating Factor 42 as the applied treatment, compared with the Placebo.
genes |>
ggplot(aes(x=conc, y=gene_expression, color=treatment, shape=cell_type,
label=ifelse(conc==10, as.character(gene_line),''))) +
geom_point() +
geom_line(aes(y=predict(m5))) +
geom_label_repel(nudge_x = 2,
direction = "y",
show.legend = FALSE) +
facet_wrap(~ trial_number, scales="free") +
labs(x = "Concentration (mg/mL)",
y = "Gene Expression",
color = "Treatment",
shape = "Cell Type",
label = "Gene Line") +
theme(legend.position="bottom") +
scale_shape(labels=c("101 Type Cell", "Wild Type Cell")) +
paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
labels=c("Activating Factor 42", "Placebo"))
ggsave(here::here("figs/2023-05-08-mixed-effects/model-plot.pdf"))
#| label: tbl-comp
#| tbl-cap: Quantitative metrics for the two models. We see that the three-way interaction model has a much lower AIC than the Concentration x Treatment model, but the RMSE and R squared are both quite similar. Given that the three-way interaction model has more degrees of freedom, we have chosen the Concentration x Treatment model.
#| tbl-cap-location: top
compare_performance(m2, m5) |>
select(c(AIC, R2_conditional, RMSE)) |>
rename("R Squared" = "R2_conditional") |>
add_column(Model=c("Concentration x Treatment",
"Concentration x Treatment x Cell Type"),
.before = "AIC") |>
gt() |>
fmt_number(decimals = 4)
knitr::opts_chunk$set(fig.pos = 'H',
message=FALSE,
warning=FALSE,
info=FALSE)
pacman::p_load(tidyverse, lme4, ggrepel, paletteer, vip, kableExtra,
performance, gt, lmerTest, gtsummary)
genes <- read.csv(here::here("data", "melted-gene-WTF-IISfD-data.csv"))
#| label: fig-eda
#| fig-cap: Plots showing the increase in gene expression as concentration of activating factor increases. We see that the Wild Type cells have a lower starting intercept value of gene expression. Experiments that used Activating Factor 42 have a higher slope value, and therefore gene expression. We have also labelled the gene line for each set of eleven points.
genes |>
ggplot(aes(x=conc, y=gene_expression, color=treatment,
label=ifelse(conc==10, as.character(gene_line),''))) +
geom_point() +
geom_label_repel(nudge_x = 2,
direction = "y",
show.legend = FALSE) +
facet_wrap(~ cell_type, scales="free",
labeller = labeller(cell_type = c("C101" = "101 Type",
"WT" = "Wild Type"))) +
labs(x = "Concentration (mg/mL)",
y = "Gene Expression",
color = "Treatment",
label = "Gene Line") +
theme(legend.position="bottom") +
paletteer::scale_color_paletteer_d("tvthemes::rickAndMorty",
labels=c("Activating Factor 42", "Placebo"))
m2 <- lmer(gene_expression ~
conc * treatment + cell_type + (1 | gene_line),
data = genes)
m5 <- lmer(gene_expression ~
conc * treatment * cell_type + (1 | gene_line),
data = genes)
#| label: fig-m5res
#| fig-cap: Residuals versus fitted plot for the fifth model, which varies intercept by gene line and considers interaction between concentration of treatment and treatment type. We see there is mostly random scattering of the residuals, satisfying the assumption of homoscedasticity.
plot(m5)
#| label: tbl-comp
#| tbl-cap: Quantitative metrics for the two models. We see that the three-way interaction model has a much lower AIC than the Concentration x Treatment model, but the RMSE and R squared are both quite similar. Given that the three-way interaction model has more degrees of freedom, we have chosen the Concentration x Treatment model.
#| tbl-cap-location: top
compare_performance(m2, m5) |>
select(c(AIC, R2_conditional, RMSE)) |>
rename("R Squared" = "R2_conditional") |>
add_column(Model=c("Concentration x Treatment",
"Concentration x Treatment x Cell Type"),
.before = "AIC") |>
gt() |>
fmt_number(decimals = 4)
